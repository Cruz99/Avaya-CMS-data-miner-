Option Explicit''Assigning variables to CMS application objects library (referneces)Dim cvsApp As Object, cvsSrv As Object, cvsconn As Object, INFO As Object, cvsRepProp As Object, cvsLog As ObjectDim bConnected As Boolean, b As BooleanDim iServer As IntegerDim ACD As String''Defining new books, worksheets as different data referencesDim MainBook As Workbook, AgentBook As Workbook, WFMBook As WorkbookDim wsMainBook As Worksheet, wsAgentBook As Worksheet, wsWFMBook As Worksheet, KanaSheet  As WorksheetDim counter As Integer''Defining Collection of Cells ObjectsPublic List As CollectionPublic Const ROWCOUNT = 24 ''harcoding number of rows in the fileSub mainTab()Dim x As Integer ''loop counter xDim i As Integer '' loop counter iDim listCollection As New Collection  '' new collectionDim rowCollection As New Collection '' new collectionActiveWorkbook.Worksheets.Add.Name = "RawKana"setProperties '' setting propertiesOpenCmsConnection '' Opening connection to CMS appgetKanaReport '' opening and getting email data''Assigning names to each rowWith wsMainBook    .Cells.clearContents    .Cells(1, 1) = "Ext"    .Cells(1, 2) = "Name"    .Cells(1, 3) = "Kana %"    .Cells(1, 4) = "ePH"    .Cells(1, 5) = "Lang 1"    .Cells(1, 6) = "Lang 2"    .Cells(1, 7) = "Start"    .Cells(1, 8) = "Stop"    .Cells(1, 9) = "Other"    .Cells(1, 10) = "Notes"    .Cells(1, 11) = "KET"    .Cells(1, 12) = "SRS"    .Cells(1, 13) = "S&S"    .Cells(1, 14) = "BRG"    .Cells(1, 15) = "LUX"    .Cells(1, 16) = "SPG"    .Cells(1, 17) = "CS"    .Cells(1, 18) = "RQ SRS"    .Cells(1, 19) = "RQ SNS"    .Cells(1, 20) = "RQ BRG"    .Cells(1, 21) = "ID SRS"    .Cells(1, 22) = "ID BRG"    .Cells(1, 23) = "ID PROF"    .Cells(1, 24) = "Department"End WithwsMainBook.Activatex = 1i = 2''Looping through file with emails and assigning cells (rows) according to each agent: if = "YES"Do    If wsAgentBook.Cells(x, 12) = "Sales & Service" And wsAgentBook.Cells(x, 20) = "YES" Then                Set rowCollection = New Collection           rowCollection.Add (wsAgentBook.Cells(x, 1)) ''Ext           rowCollection.Add (wsAgentBook.Cells(x, 2)) ''Name           rowCollection.Add getKanaPercent(wsAgentBook.Cells(x, 1), x) '' Kana %           rowCollection.Add ("ePh goes here") ''ePh           rowCollection.Add (wsAgentBook.Cells(x, 3)) ''Lang           rowCollection.Add (wsAgentBook.Cells(x, 4)) ''Lang 2           rowCollection.Add ("START") ''Start           rowCollection.Add ("STOP") ''Stop           rowCollection.Add ("OTHER") ''Other           rowCollection.Add (wsAgentBook.Cells(x, 13)) ''Notes           rowCollection.Add (wsAgentBook.Cells(x, 5)) ''KET           rowCollection.Add (wsAgentBook.Cells(x, 6)) ''SRS           rowCollection.Add (wsAgentBook.Cells(x, 7)) ''S&S           rowCollection.Add (wsAgentBook.Cells(x, 8)) ''BRG           rowCollection.Add (wsAgentBook.Cells(x, 9)) '' LUX           rowCollection.Add (wsAgentBook.Cells(x, 10)) ''SPG           rowCollection.Add (wsAgentBook.Cells(x, 11)) ''CS           rowCollection.Add (wsAgentBook.Cells(x, 14)) ''SRS RQ           rowCollection.Add (wsAgentBook.Cells(x, 15)) ''S&S RQ           rowCollection.Add (wsAgentBook.Cells(x, 16)) ''BRG RQ           rowCollection.Add (wsAgentBook.Cells(x, 17)) ''ID SRS           rowCollection.Add (wsAgentBook.Cells(x, 18)) ''ID BRG           rowCollection.Add (wsAgentBook.Cells(x, 19)) ''ID PROF           rowCollection.Add (wsAgentBook.Cells(x, 12)) ''DEP           listCollection.Add rowCollection    End If    x = x + 1       Loop Until IsEmpty(wsAgentBook.Cells(x, 1))  '' Defining the last row in a loopDim a, b As Integer''Printing collection of items to excel cellsFor a = 1 To listCollection.COUNT    For b = 1 To ROWCOUNT        wsMainBook.Cells(a + 1, b) = listCollection(a)(b)    NextNextEnd Sub''This function is responsible for opening CMS connections (server)Function OpenCmsConnection()Dim dateRange2 As StringdateRange2 = "01/07/2016" & "-" & "09/07/2016" ''Hardcoded date range - this can be change to dynamic - depending on needsApplication.ScreenUpdating = FalseSet cvsApp = CreateObject("ACSUP.cvsApplication")  ''Creating an object from CMS object librarySet cvsconn = CreateObject("ACSCN.cvsConnection") ''Creating an object from CMS object librarySet cvsSrv = CreateObject("ACSUPSRV.cvsServer") ''Creating an object from CMS object library  bConnected = False  Set cvsSrv = cvsApp.Servers(1)            ''Opening connection to the promary server if this is not available go to the other ip  If cvsSrv.ServerKey Like "*\10.5.168.27\*\*\*" Then    bConnected = True  End IfIf bConnected = False Then   If cvsSrv.ServerKey Like "*\10.20.35.27\*\*\*" Then '' secondaty IP - used if primary connection is not opened    bConnected = True  End IfEnd IfIf bConnected = False Then  If MsgBox("No active CMS Supervisor connection found.  Please log in and try again.", vbOKOnly, "Another Security Warning") = vbOK Then EndEnd If  cvsSrv.Reports.ACD = 1End Function''Defining the report settingsFunction getKanaReport()    Set INFO = cvsSrv.Reports.Reports("Historical\Designer\Agents AUX") '' Report path and name assigned to INFO object    b = cvsSrv.Reports.CreateReport(INFO, cvsRepProp)        cvsRepProp.Window.Top = 11595        cvsRepProp.Window.Left = 15        cvsRepProp.Window.Width = 6450        cvsRepProp.Window.Height = 2850        cvsRepProp.TimeZone = "Europe/Dublin"        cvsRepProp.SetProperty "Agent Group", "C all"        cvsRepProp.SetProperty "Dates", "  " & monthToDate() & "  " ''monthToDate() - dynamic date range        b = cvsRepProp.ExportData("", 9, 0, True, True, True)        cvsRepProp.Quit        Application.DisplayAlerts = False    KanaSheet.Cells.PasteSpecialApplication.DisplayAlerts = True''Closing CMS application objects (sets to nothing)End FunctionFunction CloseCmsConnection()    Set INFO = Nothing    Set cvsLog = Nothing    Set cvsRepProp = Nothing    Set cvsconn = Nothing    Set cvsSrv = Nothing    Set cvsApp = NothingEnd Function''Setting up global variablesFunction setProperties()Set MainBook = ActiveWorkbookSet wsMainBook = MainBook.Sheets("Main")Application.DisplayAlerts = False    Set AgentBook = Workbooks.Open("W:\ops\Timetables\Kana Timetables.xlsm", ReadOnly:=True, Password:="Intraday14", IgnoreReadOnlyRecommended:=True, CorruptLoad:=True)    Set WFMBook = Workbooks.Open("T:\Autorun\Cork eService Mng.xls")    Set wsAgentBook = AgentBook.Sheets("Timetable")    Set wsWFMBook = WFMBook.Sheets(1)    Set KanaSheet = MainBook.Sheets("RawKana")Application.DisplayAlerts = TrueEnd Function''Defining the date range to reflect "month to date" rangeFunction monthToDate() As StringDim dateRng As StringDim firstOfMnth, todayDate, previousDay As VariantpreviousDay = Date - 1todayDate = Day(Date)firstOfMnth = Date - todayDate + 1    If todayDate = 1 Then        monthToDate = firstOfMnth        Exit Function    ElseIf todayDate = 2 Then monthToDate = Date - Day(Date) + 1    Else: monthToDate = Date - Day(Date) + 1 & "-" & Date - 1    End IfEnd Function'' This method calulates percent of time spent on KANA AUXFunction getKanaPercent(extNum As Long, x As Integer)counter = 1getKanaPercent = 0Do    If KanaSheet.Cells(counter, 2) = extNum Then        '''Getting Kana percent calculation        On Error Resume Next        getKanaPercent = KanaSheet.Cells(counter, 14) / (KanaSheet.Cells(counter, 3) - (KanaSheet.Cells(counter, 5) + KanaSheet.Cells(counter, 6) + KanaSheet.Cells(counter, 7) + KanaSheet.Cells(counter, 8) + _        KanaSheet.Cells(counter, 11) + KanaSheet.Cells(counter, 12) + KanaSheet.Cells(counter, 13)))        Exit Function    End If    counter = counter + 1Loop Until IsEmpty(KanaSheet.Cells(counter, 1))End Function
